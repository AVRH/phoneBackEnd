{"version":3,"sources":["components/persons.js","components/ErrorMessage.js","components/AddForm.js","components/SearhForm.js","services/numbers.js","App.js","serviceWorker.js","index.js"],"names":["Person","_ref2","person","handleClick","react_default","a","createElement","className","name","number","onClick","id","Persons","_ref","persons","handleDelete","map","p","persons_Person","key","ErrorMessage","message","AddForm","addPerson","nameValue","handlePersonChange","numberValue","handleNumberChange","components_ErrorMessage","onSubmit","value","onChange","type","SearchForm","searchTerm","handleChange","baseUrl","numbers","getAll","axios","get","then","response","data","createNew","newNumber","post","deleteNumber","delete","concat","changeNumber","newObject","put","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","state","indexOf","newName","window","confirm","find","changedPerson","objectSpread","NumberService","setState","error","catch","filter","setTimeout","newPerson","addedPerson","deletePerson","target","handleSearchChange","_this2","_this3","showedItems","toLowerCase","includes","SearhForm","components_persons","components_AddForm","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf9e4c1e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n    return(\r\n        <div className=\"personList\">\r\n        <h2 className=\"sectionHeader\">Numerot</h2>\r\n        {persons.map(p => \r\n            <Person key={p.name} person={p} handleClick={handleDelete(p.name, p.id)}/>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Person = ({person, handleClick}) => {\r\n    return(\r\n        <div className=\"person\">\r\n        <p>{person.name} {person.number} <button onClick={handleClick} id=\"delete\">Delete</button></p> \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst ErrorMessage = ({message}) => {\r\n    return(\r\n        <div id=\"errorMessage\">\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n       \r\n}\r\n\r\nexport default ErrorMessage","import React from 'react'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nconst AddForm = ({message,addPerson, nameValue, handlePersonChange, numberValue, handleNumberChange}) => {\r\n    return(\r\n    <div className=\"addForm\">\r\n    <h2 className=\"sectionHeader\">Lisaa Uusi</h2>\r\n    {message != null ? <ErrorMessage message={message}/> : null}\r\n    <form onSubmit={addPerson}>\r\n        <div>\r\n        nimi: <input \r\n            value={nameValue}\r\n            onChange={handlePersonChange}\r\n        />\r\n        numero: <input\r\n            value={numberValue}\r\n            onChange={handleNumberChange}\r\n        />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">lisää</button>\r\n        </div>\r\n    </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AddForm","import React from 'react'\r\n\r\nconst SearchForm = ({searchTerm, handleChange}) => {\r\n    return(\r\n        <div className=\"searchForm\">\r\n        Rajaa tuloksia: <input\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n         />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request =  axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createNew = (newNumber) => {\r\n    const request = axios.post(baseUrl, newNumber)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n    return axios.delete(`${baseUrl}\\\\${id}`)\r\n}\r\n\r\nconst changeNumber = (id,newObject) => {\r\n    const request = axios.put(`${baseUrl}\\\\${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, createNew, deleteNumber, changeNumber}","import React from 'react';\nimport './App.css'\nimport Persons from './components/persons'\nimport AddForm from './components/AddForm'\nimport SearchForm from './components/SearhForm'\nimport NumberService from './services/numbers'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [ ],\n      newName: 'Add a new person...',\n      newNumber: 'Add phone number...',\n      error: null,\n      searchTerm: ''\n    }\n  }\n  componentDidMount(){\n    NumberService\n      .getAll()\n      .then(persons => \n        this.setState({persons})\n        )\n  }\n\n  addPerson = (event) => {\n    event.preventDefault()\n\n    if(this.state.persons.map(p => p.name).indexOf(this.state.newName) !== -1){\n      const response = window.confirm(`${this.state.newName} is already in the phone book, do you want to replace the phone number?`)\n      if(response){\n        const person = this.state.persons.find(person => person.name === this.state.newName)\n        const changedPerson = {...person, number: this.state.newNumber}\n\n        NumberService\n          .changeNumber(changedPerson.id, changedPerson)\n          .then(response => \n            this.setState({\n              persons: this.state.persons.map(p => p.name !== changedPerson.name ? p : response),\n              newName: '',\n              newNumber: '',\n              error: \"Numero vaihdettiin onnistuneesti\"\n            })\n            )\n          .catch(error => {\n            this.setState({\n              error: \"This person has already been deleted from the server\",\n              persons: this.state.persons.filter(p => p.name !== changedPerson.name)\n            })\n          })\n          setTimeout(() => {\n            this.setState({error: null})\n          },5000)\n      \n    }\n    }else{\n      const newPerson = {\n        name: this.state.newName,\n        number: this.state.newNumber,\n      }\n\n      NumberService\n        .createNew(newPerson)\n        .then(addedPerson => {\n          this.setState(\n            {\n              persons: this.state.persons.concat(addedPerson),\n              newName: '',\n              newNumber: '',\n              searchTerm: '',\n              error: \"Succesfully added a new person!\"\n            }\n          )\n        })\n        setTimeout(() => {\n          this.setState({error: null})\n        },5000)\n\n      }\n  }\n  deletePerson = (name,id) => () => {\n    const result = window.confirm(`Do you want to delete: '${name}'`)\n    if(result){\n      NumberService\n        .deleteNumber(id)\n        .then(response => {\n          this.setState({\n            persons: this.state.persons.filter(p => p.id !== id),\n            error: \"The person has been succesfully deleted!\"\n          })\n        })\n        setTimeout(() => {\n          this.setState({error: null})\n        },5000)\n    }\n  }\n\n  handlePersonChange = (event) => {\n    this.setState( {newName: event.target.value})\n  }\n  handleNumberChange = (event) => {\n    this.setState({newNumber: event.target.value})\n  }\n  handleSearchChange = (event) => {\n    this.setState({searchTerm: event.target.value})\n  }\n  render() {\n    const showedItems = this.state.persons.filter(person => person.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    return (\n      <div className = \"App\">\n        <h1>Puhelinluettelo</h1>\n      <div className = \"flex-container\">\n        \n        <SearchForm\n          searchTerm={this.state.searchTerm}\n          handleChange={this.handleSearchChange}\n        />\n        <Persons persons={showedItems} handleDelete={this.deletePerson} />\n        <AddForm \n          message={this.state.error}\n          addPerson={this.addPerson}\n          nameValue={this.state.newName}\n          handlePersonChange={this.handlePersonChange}\n          numberValue={this.state.newNumber}\n          handleNumberChange={this.handleNumberChange}\n        />\n\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}